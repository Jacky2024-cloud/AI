# -*- coding: utf-8 -*-
"""「「keras_CNN_Cifar10.ipynb」的副本」的副本

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/github/shhuangmust/AI/blob/113-1/6.keras_CNN_Cifar10.ipynb
"""

import numpy as np
from tensorflow import keras
from keras.models import Sequential
from keras.layers import Dense, Conv2D, MaxPooling2D, Flatten
from keras.datasets import cifar10
from keras.utils import to_categorical
import matplotlib.pyplot as plt


(train_data, train_label), (test_data, test_label) = cifar10.load_data()


train_data = train_data.astype('float32') / 255
test_data = test_data.astype('float32') / 255
train_label = to_categorical(train_label, num_classes=10)
test_label = to_categorical(test_label, num_classes=10)


model = Sequential()
model.add(Conv2D(filters=64, kernel_size=(5, 5), input_shape=(32, 32, 3), activation='relu'))
model.add(Conv2D(filters=64, kernel_size=(5, 5), activation='relu'))
model.add(MaxPooling2D(pool_size=2))
model.add(Conv2D(filters=128, kernel_size=(5, 5), activation='relu'))
model.add(Conv2D(filters=128, kernel_size=(5, 5), activation='relu'))
model.add(MaxPooling2D(pool_size=2))
model.add(Flatten())
model.add(Dense(10, activation='softmax'))


model.summary()


model.compile(optimizer='rmsprop', loss='categorical_crossentropy', metrics=['accuracy'])


train_history = model.fit(train_data, train_label, epochs=30, batch_size=512, validation_split=0.2)


score = model.evaluate(test_data, test_label)

print("Test loss:", score[0])
print("Test accuracy:", score[1])


def show_train_history(train_history, train, validation):
    plt.plot(train_history.history[train])
    plt.plot(train_history.history[validation])
    plt.title('Train History')
    plt.ylabel(train)
    plt.xlabel('Epoch')
    plt.legend(['train', 'validation'], loc='best')
    plt.show()

show_train_history(train_history, 'accuracy', 'val_accuracy')  # 繪製準確率
show_train_history(train_history, 'loss', 'val_loss')          # 繪製損失

cifar10=keras.datasets.cifar10
(train_data, train_label), (test_data, test_label) = cifar10.load_data()
train_label_original=train_label
train_label = keras.utils.to_categorical(train_label)
test_label = keras.utils.to_categorical(test_label)

import numpy as np
import matplotlib.pyplot as plt
from keras.datasets import cifar10
from keras.utils import to_categorical


(train_data, train_label), (test_data, test_label) = cifar10.load_data()


train_data = train_data.astype('float32') / 255
test_data = test_data.astype('float32') / 255


train_label_original = train_label.flatten()
train_label = to_categorical(train_label, num_classes=10)


category = ['airplane', 'automobile', 'bird', 'cat', 'deer', 'dog', 'frog', 'horse', 'ship', 'truck']
plt.imshow(train_data[0])
plt.title(category[train_label_original[0]])
plt.axis('off')
plt.show()


print("Original label:", train_label_original[0])

train_history=model.fit(train_data,train_label,epochs=30,batch_size=512)

score=model.evaluate(test_data, test_label)
print(score[1])

import matplotlib.pyplot as plt
import numpy as np

def show_train_history(train_history, train):
    plt.plot(train_history.history[train])
    plt.title('Train History')
    plt.ylabel(train)
    plt.xlabel('Epoch')
    plt.legend(['train'], loc='center right')
    plt.show()

show_train_history(train_history, 'accuracy')
show_train_history(train_history, 'loss')